!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";const r=new(i(1))(document.getElementsByTagName("canvas")[0]);r.render(),r.init(),window.addEventListener("resize",()=>{r.render(),r.init()},!1);const n=document.getElementById("myself-mode"),s=document.getElementById("computer-mode");n.onclick=()=>{n.classList.add("selected"),s.classList.remove("selected")},s.onclick=()=>{s.classList.add("selected"),n.classList.remove("selected")},r.put(2,2,"black"),r.changeColor(2,2,"black","white"),r.changeColor(3,3,"black","white"),setTimeout(()=>{r.changeColor(5,5,"black","white")},500),r.onBoardClick(({row:e,column:t})=>{console.log(e,t)})},function(e,t,i){"use strict";e.exports=class{constructor(e){this.container=e,this.board=e.getContext("2d")}render(){const e=Math.min(window.innerWidth,window.innerHeight);this.size=.8*e,this.rectSize=this.size/8,this.board.canvas.width=this.size,this.board.canvas.height=this.size}init(){this.board.fillStyle="black";for(let e=0;e<8;e++)for(let t=0;t<8;t++)this.board.strokeRect(e*this.rectSize,t*this.rectSize,this.rectSize,this.rectSize)}put(e,t,i){this.board.fillStyle=i,this.board.beginPath(),this.board.arc(this.rectSize*(t-.5),this.rectSize*(e-.5),this.rectSize/2-2,0,2*Math.PI,!0),this.board.fill()}changeColor(e,t,i,r){let n=20;const s=setInterval(()=>{let o=n/20;if(this.board.fillStyle="darkgreen",this.board.beginPath(),this.board.arc(this.rectSize*(t-.5),this.rectSize*(e-.5),this.rectSize/2-1,0,2*Math.PI,!0),this.board.fill(),this.board.fillStyle=i,o=--n/20,this.board.beginPath(),this.board.ellipse(this.rectSize*(t-.5),this.rectSize*(e-.5),this.rectSize/2*o-1<0?0:this.rectSize/2*o-1,this.rectSize/2-1<0?0:this.rectSize/2-1,0,0,2*Math.PI,!0),this.board.fill(),0===n){clearInterval(s);const i=setInterval(()=>{let s=++n/20;this.board.fillStyle=r,s=++n/20,this.board.beginPath(),this.board.ellipse(this.rectSize*(t-.5),this.rectSize*(e-.5),this.rectSize/2*s-1<0?0:this.rectSize/2*s-1,this.rectSize/2-1<0?0:this.rectSize/2-1,0,0,2*Math.PI,!0),this.board.fill(),20===n&&clearInterval(i)},20)}},20);this.board.fill()}onBoardClick(e){this.container.addEventListener("click",t=>{const i=t.pageX-(this.container.offsetLeft+this.container.clientLeft),r=t.pageY-(this.container.offsetTop+this.container.clientTop),n=Math.ceil(i/this.rectSize),s=Math.ceil(r/this.rectSize);e({row:s,column:n})})}}}]);